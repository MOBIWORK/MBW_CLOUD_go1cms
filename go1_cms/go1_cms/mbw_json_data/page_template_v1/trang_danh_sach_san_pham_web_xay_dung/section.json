[{"name": "PS-24-0000013099", "owner": "Administrator", "creation": "2024-10-08 08:58:26.884686", "modified": "2024-10-10 11:50:47.119551", "modified_by": "Administrator", "docstatus": 0, "idx": 2, "section_title": "Banner điều hướng Web xây dựng", "route": "/offers-list?token=gAAAAABnBJHm5Un-JUlaNHdL8VFiLek_-Oq83XbTQesruhGmTA7p29H7WqdN93WoTcuu_NVEivlw9uFHSkpV4Y-Q4SUV-MIC17PXkCGb9LcCvuFSerUbUe4=", "class_name": "llduchcf", "is_template": 1, "section_group": "web xây dựng", "is_full_width": 0, "allow_clone": 1, "is_clone": 0, "section_type": "Static Section", "view_type": "", "device_type": "Web & Mobile", "is_editable": 0, "is_login_required": 0, "content_type": "", "fetch_product": 0, "section_name": "Banner điều hướng Web xây dựng", "image_option": "Same Document", "allow_update_to_style": 0, "query_by_category": 0, "no_of_records": 0, "sort_by": "DESC", "dynamic_data": 1, "display_data_randomly": 0, "image": "/files/Ảnh chụp màn hình 2024-07-22 162625.png", "enable_view_more": 0, "custom_section_data": "[]", "bg_type": "Color", "bg_color": "#ffffff", "web_template": "<div class=\"bg-[url('{{ img }}')] bg-cover bg-no-repeat bg-left h-[250px] flex flex-col text-white items-center\">\n      <div class=\"container pt-[92px] flex flex-col items-center gap-[14px] \">\n         <div class=\"text-center\"><span class=\"font-bold text-[40px] leading-[48px]\">{{ title }}</span></div>\n\n         <div class=\"flex flex-wrap flex-row gap-3 items-center\">\n              {% for brc in breadcrumb %} \n      {% if loop.first %}\n        <a\n          href=\"{{ brc.route }}\"\n          class=\"font-medium text-xl leading-6 text-white\"\n          target=\"_blank\"\n        >{{ brc.menu }}</a>\n      {% else %}\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M9.50391 18C9.64453 18 9.77734 17.9766 9.90234 17.9297C10.0273 17.8828 10.1289 17.8125 10.207 17.7188L15.2227 12.7031C15.3164 12.625 15.3867 12.5234 15.4336 12.3984C15.4805 12.2734 15.5039 12.1406 15.5039 12C15.5039 11.8594 15.4805 11.7305 15.4336 11.6133C15.3867 11.4961 15.3164 11.3906 15.2227 11.2969L10.207 6.30469C10.1289 6.21094 10.0273 6.13672 9.90234 6.08203C9.77734 6.02734 9.64453 6 9.50391 6C9.22266 6 8.98438 6.09766 8.78906 6.29297C8.59375 6.48828 8.49609 6.71875 8.49609 6.98438C8.49609 7.14062 8.52344 7.27734 8.57812 7.39453C8.63281 7.51172 8.70703 7.61719 8.80078 7.71094L13.0898 12L8.80078 16.3125C8.70703 16.3906 8.63672 16.4922 8.58984 16.6172C8.54297 16.7422 8.51953 16.875 8.51953 17.0156C8.51953 17.2812 8.61719 17.5117 8.8125 17.707C9.00781 17.9023 9.23828 18 9.50391 18Z\" fill=\"white\"/>\n</svg>\n\n        <a\n          href=\"{{ brc.route }}\"\n          target=\"_blank\"\n          class=\"font-medium text-xl leading-6 text-white\"\n        >{{ brc.menu }}</a>\n      {% endif %}\n    {% endfor %}\n              \n         </div>\n      </div>\n    </div>", "doctype": "Page Section", "content": [{"name": "74ae239be8", "owner": "Administrator", "creation": "2024-10-08 08:58:26.884686", "modified": "2024-10-10 11:50:47.119551", "modified_by": "Administrator", "docstatus": 0, "idx": 1, "field_label": "Banner", "field_key": "img", "field_type": "Attach", "content_type": "Data", "allow_update_to_style": 0, "content": "/files/bannergthieu.jpeg", "parent": "PS-24-0000013099", "parentfield": "content", "parenttype": "Page Section", "doctype": "Section Content"}, {"name": "0c95be51fb", "owner": "Administrator", "creation": "2024-10-08 08:58:26.884686", "modified": "2024-10-10 11:50:47.119551", "modified_by": "Administrator", "docstatus": 0, "idx": 2, "field_label": "Tiêu đề", "field_key": "title", "field_type": "Text", "content_type": "Data", "allow_update_to_style": 0, "content": "Sản phẩm", "parent": "PS-24-0000013099", "parentfield": "content", "parenttype": "Page Section", "doctype": "Section Content"}, {"name": "ce4af4a14f", "owner": "Administrator", "creation": "2024-10-08 08:58:26.884686", "modified": "2024-10-10 11:50:47.119551", "modified_by": "Administrator", "docstatus": 0, "idx": 3, "field_label": "Đường dẫn", "field_key": "breadcrumb", "field_type": "List", "content_type": "Data", "allow_update_to_style": 0, "content": "[{\"menu\":\"Trang chủ\",\"route\":\"/home\",\"idx\":1},{\"idx\":2,\"menu\":\"Sản phẩm\",\"route\":\"#\"}]", "fields_json": "[{\"field_label\":\"Tiêu đề\",\"field_key\":\"menu\",\"field_type\":\"Text\",\"idx\":1},{\"field_label\":\"Đường dẫn\",\"field_key\":\"route\",\"field_type\":\"Text\",\"idx\":2}]", "parent": "PS-24-0000013099", "parentfield": "content", "parenttype": "Page Section", "doctype": "Section Content"}], "section_column_css": [], "column_index": 1}, {"name": "PS-24-0000015101", "owner": "Administrator", "creation": "2024-10-16 13:44:14.253710", "modified": "2024-10-16 13:44:14.261541", "modified_by": "Administrator", "docstatus": 0, "idx": 3, "section_title": "List sản phẩm web xây dựng", "route": "list s-n ph-m web x-y d-ng", "class_name": "rzyawbxx", "is_template": 1, "section_group": "web xây dựng", "is_full_width": 0, "allow_clone": 1, "is_clone": 0, "section_type": "Static Section", "view_type": "", "device_type": "Web & Mobile", "is_editable": 0, "is_login_required": 0, "content_type": "", "fetch_product": 0, "section_name": "List sản phẩm web xây dựng", "image_option": "Same Document", "allow_update_to_style": 0, "query_by_category": 0, "no_of_records": 0, "sort_by": "DESC", "dynamic_data": 1, "display_data_randomly": 0, "image": "/files/Screenshot from 2024-07-24 10-36-06.png", "enable_view_more": 0, "custom_section_data": "[]", "bg_type": "Color", "bg_color": "#ffffff", "web_template": "    <section\n      class=\"my-10 min-h-screen flex flex-col items-center\"\n      id=\"list-products-filter\"\n    >\n      <div class=\"container\">\n        <section class=\"w-full container mx-auto\">\n          <div class=\"flex-col text-center\">\n            <div class=\"relative grid grid-cols-1 xl:grid-cols-4 xl:gap-4\">\n              <div id=\"loading\" class=\"loading-overlay absolute\">\n                <div class=\"spinner\"></div>\n              </div>\n              <div class=\"filter display mb-5\" id=\"filter\">\n                <div\n                  class=\"relative flex flex-col border text-left border-l-gray-500 border-none md:border md:border-solid md:border-[#DFE3E8] bg-white rounded-l-lg md:rounded-lg h-full w-[88%] overflow-y-auto\"\n                >\n                  <form class=\"p-4\" id=\"form-filter\">\n                    <div class=\"relative mb-4\">\n                      <input\n                        type=\"text\"\n                        placeholder=\"Tìm kiếm...\"\n                        class=\"w-full p-2 pl-4 pr-10 border rounded-md\"\n                        id=\"text-search\"\n                      />\n                      <span\n                        class=\"absolute right-2 top-1/2 -translate-y-1/2 text-gray-400\"\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          class=\"h-5 w-5\"\n                          viewBox=\"0 0 20 20\"\n                          fill=\"currentColor\"\n                        >\n                          <path\n                            fill-rule=\"evenodd\"\n                            d=\"M12.9 14.32a8 8 0 111.41-1.41l4.3 4.29-1.41 1.42-4.3-4.3zM8 14a6 6 0 100-12 6 6 0 000 12z\"\n                            clip-rule=\"evenodd\"\n                          />\n                        </svg>\n                      </span>\n                    </div>\n\n                    <div class=\"mb-4\" id=\"filter-container\"></div>\n                  </form>\n                </div>\n                <!-- button close filter -->\n                <button\n                  id=\"button-close-filter\"\n                  class=\"xl:hidden absolute top-1/2 -translate-y-1/2 left-0 z-[999999999] text-white bg-[#212B36] w-[12%] h-12 rounded-l-lg\"\n                >\n                  x\n                </button>\n              </div>\n              <div class=\"overlay\" id=\"overlay\"></div>\n\n              <div class=\"col-span-3 grid grid-cols-1 gap-7 pb-14 mx-5 sm:mx-0\">\n                <div class=\"flex justify-between items-center h-[50px]\">\n                  <span class=\"text-[22px] font-bold text-[#212B36]\"\n                    >Sản phẩm</span\n                  >\n                  <div class=\"flex gap-2\">\n                    <label\n                      for=\"sort-by-default\"\n                      class=\"text-base font-normal text-black text-nowrap flex items-center\"\n                      >Sắp xếp theo</label\n                    >\n                    <select\n                      id=\"sort-by-default\"\n                      class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 flex items-center\"\n                    >\n                      <option value=\"\">Mặc định</option>\n                      <option value=\"ranking\">Nổi bật</option>\n                      <option value=\"creation\">Mới nhất</option>\n                    </select>\n                  </div>\n                </div>\n                <div\n                  class=\"text-left grid grid-cols-1 md:grid-cols-3 gap-10\"\n                  id=\"products-container\"\n                ></div>\n                <div\n                  id=\"pagination-container\"\n                  class=\"flex justify-center gap-2 hidden\"\n                >\n                  <button id=\"prev-page\" class=\"px-2 py-[1px] text-xl\">\n                    <svg\n                      class=\"h-4\"\n                      viewBox=\"0 0 7 12\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <path\n                        d=\"M6.83938 2.06621V1.03094C6.83938 0.941211 6.73625 0.891658 6.66661 0.946568L0.629107 5.66219C0.57781 5.70209 0.536302 5.75317 0.50775 5.81154C0.479198 5.86992 0.464355 5.93404 0.464355 5.99902C0.464355 6.06401 0.479198 6.12813 0.50775 6.18651C0.536302 6.24488 0.57781 6.29596 0.629107 6.33585L6.66661 11.0515C6.73759 11.1064 6.83938 11.0568 6.83938 10.9671V9.93184C6.83938 9.86621 6.80857 9.80327 6.75768 9.76309L1.93625 5.99969L6.75768 2.23496C6.80857 2.19478 6.83938 2.13184 6.83938 2.06621Z\"\n                        fill=\"currentColor\"\n                      />\n                    </svg>\n                  </button>\n                  <button id=\"next-page\" class=\"px-2 py-[1px] text-xl\">\n                    <svg\n                      class=\"h-4\"\n                      viewBox=\"0 0 7 12\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <path\n                        d=\"M6.39777 5.66281L0.360269 0.947189C0.344493 0.934768 0.325533 0.92705 0.305568 0.924919C0.285603 0.922788 0.265441 0.926332 0.247399 0.935143C0.229357 0.943955 0.214166 0.957676 0.203571 0.974732C0.192976 0.991787 0.187406 1.01149 0.187501 1.03156V2.06683C0.187501 2.13246 0.218305 2.1954 0.269198 2.23558L5.09063 6.00031L0.269198 9.76505C0.216966 9.80522 0.187501 9.86817 0.187501 9.9338V10.9691C0.187501 11.0588 0.290626 11.1083 0.360269 11.0534L6.39777 6.33781C6.44908 6.29779 6.4906 6.24658 6.51915 6.1881C6.5477 6.12962 6.56254 6.06539 6.56254 6.00031C6.56254 5.93523 6.5477 5.87101 6.51915 5.81253C6.4906 5.75404 6.44908 5.70284 6.39777 5.66281Z\"\n                        fill=\"currentColor\"\n                      />\n                    </svg>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </section>\n    <button class=\"filter-toggle\" id=\"filterToggle\">\n      <i class=\"fa fa-filter w-6 h-6\" aria-hidden=\"true\"></i>\n    </button>", "custom_css": ".text-container {\n        display: -webkit-box;\n        -webkit-box-orient: vertical;\n        -webkit-line-clamp: 3; /* Số dòng hiển thị trước khi hiển thị dấu ba chấm */\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n\n      .text-hide {\n        display: -webkit-box;\n        -webkit-box-orient: vertical;\n        -webkit-line-clamp: 1; /* Số dòng hiển thị trước khi hiển thị dấu ba chấm */\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n\n      .active-icon-view .icon path,\n      .view-icon:hover .icon path {\n        fill: white;\n      }\n\n      .active-icon-view {\n        background-color: #225771;\n      }\n\n      input[type=\"checkbox\"]:checked + label {\n        font-weight: bold;\n      }\n\n      input[type=\"checkbox\"].custom-checkbox {\n        appearance: none;\n        -webkit-appearance: none;\n        width: 16px;\n        height: 16px;\n        background-color: white;\n        border: 2px solid black;\n        border-radius: 0; /* Để tạo hình vuông */\n        position: relative;\n      }\n\n      input[type=\"checkbox\"].custom-checkbox:checked::before {\n        content: \"\";\n        display: block;\n        width: 8px;\n        height: 8px;\n        background-color: black;\n        position: absolute;\n        top: 2px;\n        left: 2px;\n      }\n\n      .page-number.active {\n        border: 1px solid #c4161c;\n        color: #c4161c;\n        border-radius: 4px;\n        font-weight: 500;\n      }\n\n      .no-active {\n        color: gray;\n        pointer-events: none;\n      }\n\n      /* Overlay for the entire screen */\n      .loading-overlay {\n        top: 50%;\n        transform: translateY(-50%);\n        width: 100%;\n        height: 100%;\n        background: rgba(255, 255, 255, 0.8);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        z-index: 9999; /* Ensure it is above all other elements */\n        display: none; /* Hidden by default */\n      }\n\n      /* Spinner */\n      .spinner {\n        border: 4px solid rgba(0, 0, 0, 0.1);\n        border-top: 4px solid #3498db;\n        border-radius: 50%;\n        width: 40px;\n        height: 40px;\n        animation: spin 1s linear infinite;\n      }\n\n      /* Spinner animation */\n      @keyframes spin {\n        0% {\n          transform: rotate(0deg);\n        }\n        100% {\n          transform: rotate(360deg);\n        }\n      }\n\n      .filter-toggle {\n        display: none;\n        position: fixed;\n        right: 0;\n        top: 50%;\n        transform: translateY(-50%);\n        background: #212b36;\n        color: white;\n        border: none;\n        padding: 10px;\n        border-radius: 5px;\n        cursor: pointer;\n        width: 64px;\n        height: 48px;\n      }\n\n      .overlay {\n        display: none;\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: rgba(0, 0, 0, 0.5);\n        z-index: 999;\n      }\n\n      @media (max-width: 1280px) {\n        .filter {\n          position: fixed;\n          top: 0;\n          right: 0;\n          height: 100%;\n          width: 70%;\n          z-index: 1000;\n          transform: translateX(-100%);\n          transition: transform 0.3s ease;\n          overflow-y: auto;\n          display: flex;\n          justify-content: flex-end;\n          background-color: rgba(0, 0, 0, -0.5);\n        }\n\n        .display {\n          display: none;\n        }\n\n        .filter.active {\n          transform: translateX(0);\n        }\n\n        .filter-toggle {\n          display: block;\n        }\n\n        .overlay.active {\n          display: block;\n        }\n      }", "custom_js": "<script>\n    const filterToggle = document.getElementById(\"filterToggle\");\n    const filter = document.getElementById(\"filter\");\n    const closeButton = document.getElementById(\"button-close-filter\");\n    const overlay = document.getElementById(\"overlay\");\n\n    filterToggle.addEventListener(\"click\", function () {\n      filter.classList.add(\"active\");\n      filter.classList.remove(\"display\");\n      overlay.classList.toggle(\"active\");\n    });\n    closeButton.addEventListener(\"click\", () => {\n      filter.classList.add(\"display\");\n      filter.classList.remove(\"active\");\n      overlay.classList.remove(\"active\");\n    });\n\n    overlay.addEventListener(\"click\", function () {\n      filter.classList.remove(\"active\");\n      overlay.classList.remove(\"active\");\n      filter.classList.add(\"display\");\n    });\n\n    const apiGetFilter =\n      \"/api/method/go1_cms.api.website.product.get_filter_product\";\n    const apiGetProduct =\n      \"/api/method/go1_cms.api.website.product.get_product_filter_data\";\n\n    const textSearch = document.getElementById(\"text-search\");\n    const filterContainer = document.getElementById(\"filter-container\");\n    const productContainer = document.getElementById(\"products-container\");\n    const formFilter = document.getElementById(\"form-filter\");\n    const loadingIndicator = document.getElementById(\"loading\");\n    const sortBy = document.getElementById(\"sort-by-default\");\n\n    const searchParams = new URLSearchParams(window.location.search);\n\n    let itemGroup = [];\n    let itemBrand = [];\n    let itemAttributeFilter = [];\n    let currentPage = 1;\n    let totalPages = 1;\n    let changeTimer; // Timer identifier\n    let changeInterval = 2009; // Thời gian chờ (ms)\n\n    // code update url\n    const updateUrl = (data) => {\n      const params = new URLSearchParams();\n      // Duyệt qua các thuộc tính của object `data` và thêm chúng vào params\n      Object?.keys(data).forEach((key) => {\n        if (Array.isArray(data[key])) {\n          // Nếu là mảng, thì thêm từng giá trị của mảng vào params với cùng một key\n          data[key].forEach((value) => params.append(key, value));\n        } else {\n          // Nếu không phải mảng, thêm trực tiếp vào params\n          params.set(key, data[key]);\n        }\n      });\n\n      const newUrl = `${window.location.pathname\n        }?page_no=${currentPage}&${params.toString()}`;\n      history.replaceState(null, \"\", newUrl);\n    };\n\n    // code tao list filter\n\n    const getFilter = async () => {\n      fetch(apiGetFilter, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n        .then((response) => response.json())\n        .then((result) => {\n          displayFilterProduct(result.message);\n          for (const filter of result.message.attribute_filters) {\n            itemAttributeFilter.push(filter.key);\n          }\n          updateUrl();\n        })\n        .catch((error) => {\n        })\n        .finally(() => {\n          // Kích hoạt lại các thành phần UI bị vô hiệu hóa\n          restoreCheckboxesFromURL(\"item_group\", \"item_group\");\n          restoreCheckboxesFromURL(\"brand\", \"brand\");\n          for (const filter of itemAttributeFilter) {\n            restoreCheckboxesFromURL(`${filter}`, `${filter}`);\n          }\n          getProducts();\n        });\n    };\n\n    const translateNameFilter = (name) => {\n      switch (name) {\n        case \"Item Group\":\n          return \"Nhóm sản phẩm\";\n        case \"Brand\":\n          return \"Thương hiệu\";\n        default:\n          return name;\n      }\n    };\n\n    const displayFilterProduct = (filters) => {\n      for (const filter of filters?.field_filters) {\n        const filterElement = document.createElement(\"div\");\n        filterElement.className = \"mb-4\";\n        // tao title\n        const title = document.createElement(\"h3\");\n        title.className = \"font-semibold mb-2 text-left\";\n        title.textContent = translateNameFilter(filter.label);\n        filterElement.appendChild(title);\n        // tao list filter\n\n        for (const item of filter.values) {\n          const filterItem = document.createElement(\"div\");\n          filterItem.className = \"filter-item flex items-center mb-2\";\n          filterItem.innerHTML = `\n        <input \n           type=\"checkbox\" \n           id=\"${item}\" \n           name=\"${filter.key}\" \n           value=\"${item}\" \n           class=\"custom-checkbox\"\n        />\n        <label for=\"${item}\" class=\"cursor-pointer ml-2\">${item}</label>\n      `;\n          filterElement.appendChild(filterItem);\n        }\n\n        filterContainer.appendChild(filterElement);\n      }\n      if (filters?.attribute_filters) {\n        for (const filter of filters.attribute_filters) {\n          const filterElement = document.createElement(\"div\");\n          filterElement.className = \"mb-4\";\n\n          // Create title\n          const title = document.createElement(\"h3\");\n          title.className = \"font-semibold mb-2 text-left\";\n          title.textContent = translateNameFilter(filter.label);\n          filterElement.appendChild(title);\n\n          // Create list of filter items\n          for (const item of filter.values) {\n            const filterItem = document.createElement(\"div\");\n            filterItem.className = \"flex items-center mb-2\";\n            filterItem.innerHTML = `\n              <input \n                type=\"checkbox\" \n                id=\"${item}\" \n                name=\"${filter.key}\" \n                value=\"${item}\" \n                class=\"custom-checkbox\"\n              />\n              <label for=\"${item}\" class=\"cursor-pointer ml-2\">${item}</label>\n            `;\n            filterElement.appendChild(filterItem);\n          }\n\n          filterContainer.appendChild(filterElement);\n        }\n      }\n    };\n\n    getFilter();\n\n    // lay lai gia tri tu url\n    // Luu data\n\n    function restoreCheckboxesFromURL(paramName, inputName) {\n      const searchParams = new URLSearchParams(window.location.search);\n\n      searchParams.getAll(paramName).forEach((value) => {\n        const checkbox = document.querySelector(\n          `input[name=\"${inputName}\"][value=\"${value}\"]`\n        );\n        if (checkbox) checkbox.checked = true;\n      });\n    }\n\n    // code lay du lieu san pham\n\n    const getProducts = () => {\n      disableUI(true);\n      showLoading(true);\n      const getDataFilterFormCheckBox = (input, array, isNumber) => {\n        array.length = 0;\n        document.querySelectorAll(input + \":checked\").forEach((checkbox) => {\n          if (isNumber) {\n            array.push(parseFloat(checkbox.value));\n          } else {\n            array.push(checkbox.value);\n          }\n          return array;\n        });\n      };\n      getDataFilterFormCheckBox('input[name=\"item_group\"]', itemGroup);\n      getDataFilterFormCheckBox('input[name=\"brand\"]', itemBrand);\n\n      const data = {\n        textSearch: textSearch.value,\n        item_group: itemGroup,\n        brand: itemBrand,\n      };\n\n      for (const filter of itemAttributeFilter) {\n        const nameFilter = [];\n        getDataFilterFormCheckBox(`input[name=\"${filter}\"]`, nameFilter);\n        data[filter] = nameFilter;\n      }\n      updateUrl(data);\n\n      const attributeFilters = {};\n      const fieldFilters = {};\n\n      // Assuming `itemAttributeFilter` contains keys like 'Colour'\n      for (const key in data) {\n        if (key !== \"textSearch\") {\n          if (itemAttributeFilter.includes(key)) {\n            attributeFilters[key] = data[key];\n          } else {\n            fieldFilters[key] = data[key];\n          }\n        }\n      }\n      // Kiểm tra xem đối tượng attributeFilters có chứa mảng không rỗng, nếu có thì thêm vào mảng filterdAttributeFilters\n      const filteredAttributeFilters = Object.keys(attributeFilters).reduce(\n        (result, key) => {\n          if (attributeFilters[key].length > 0) {\n            result[key] = attributeFilters[key];\n          }\n          return result;\n        },\n        {}\n      );\n\n      // Kiểm tra xem đối tượng fieldFilters có chứa mảng không rỗng, nếu có thì thêm vào mảng filterdFieldFilters\n      const filteredFieldFilters = Object.keys(fieldFilters).reduce(\n        (result, key) => {\n          if (fieldFilters[key].length > 0) {\n            result[key] = fieldFilters[key];\n          }\n          return result;\n        },\n        {}\n      );\n      let queryString = \"&\";\n      if (Object.keys(filteredAttributeFilters).length > 0) {\n        queryString += `attribute_filters=${JSON.stringify(\n          filteredAttributeFilters\n        )}`;\n      }\n      if (Object.keys(filteredFieldFilters).length > 0) {\n        if (queryString) queryString += \"&\";\n        queryString += `field_filters=${JSON.stringify(filteredFieldFilters)}`;\n      }\n\n      fetch(\n        `${apiGetProduct}?page_no=${currentPage}${queryString}&sort_field=${sortBy.value || \"\"\n        }`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n        .then((response) => response.json())\n        .then((result) => {\n          if (result.message.data) {\n            totalPages = result.message.pagination.total_page;\n            currentPage = result.message.pagination.current_page;\n            itemsPerPage = result.message.pagination.limit;\n            displayProduct(result.message.data);\n          }\n        })\n        .catch((error) => {\n          disableUI(false);\n          showLoading(false);\n        })\n        .finally(() => {\n          // Kích hoạt lại các thành phần UI bị vô hiệu hóa\n          disableUI(false);\n          showLoading(false);\n        });\n    };\n\n    // hieen thi san pham\n    const displayProduct = (products) => {\n      productContainer.innerHTML = \"\";\n      if (products.length === 0) {\n        const emptyElement = document.createElement(\"div\");\n        emptyElement.className =\n          \"flex flex-col justify-center items-center gap-[38px] py-[80px] col-span-full mt-[38px]\";\n        emptyElement.innerHTML = `\n    <img src=\"/files/empty-state.svg\" alt=\"\" class=\"w-[245.64px] h-[236.85px]\"></img>\n    <span class=\"text-[#212B36] font-bold text-xl\">Không có kết quả tìm kiếm </span>\n    `;\n        productContainer.appendChild(emptyElement);\n      } else {\n        for (const product of products) {\n          const productElement = document.createElement(\"a\");\n\n          productElement.className =\n            \"flex flex-col gap-[30px] cursor-pointer shadow-md\";\n          productElement.href = `/${product.route}`;\n          productElement.innerHTML = `\n            <div>\n                <img\n                src=\"${product.website_image}\"\n                alt=\"${product.web_item_name}\"\n                class=\"h-[242px] w-full\"\n                />\n                </div>\n                    <div class=\"p-2.5 flex flex-col gap-7\">\n                        <span\n                            class=\"font-medium text-base text-[#3C3B3B] leading-[19.6px]\"\n                        >${product.web_item_name}</span\n                    >\n                    <span class=\"text-[#FF5E14] font-normal text-xl\"\n                        >${(product.price_list_rate ? product.price_list_rate?.toLocaleString() : '0') + ' VND'}</span\n                    >\n                </div>\n            `; // Add closing brace here\n          productContainer.appendChild(productElement);\n        }\n      }\n\n      displayPagination();\n      window.scrollTo(0, 0);\n    };\n\n    // code xu ly su kien\n\n    formFilter.addEventListener(\"change\", (event) => {\n      currentPage = 1;\n      getProducts();\n    });\n\n    // code xu ly phan trang\n\n    function displayPagination() {\n      const paginationContainer = document.getElementById(\"pagination-container\");\n      const prevPage = document.getElementById(\"prev-page\");\n      const nextPage = document.getElementById(\"next-page\");\n\n      currentPage === 1\n        ? prevPage?.classList.add(\"no-active\")\n        : prevPage.classList.remove(\"no-active\");\n      currentPage === totalPages\n        ? nextPage?.classList.add(\"no-active\")\n        : nextPage.classList.remove(\"no-active\");\n\n      totalPages > 1\n        ? paginationContainer.classList.remove(\"hidden\")\n        : paginationContainer.classList.add(\"hidden\");\n\n      paginationContainer\n        ?.querySelectorAll(\".page-number\")\n        ?.forEach((button) => button.remove());\n\n      for (let i = 1; i <= totalPages; i++) {\n        const pageButton = document.createElement(\"button\");\n        pageButton.innerText = i;\n        pageButton.className = `page-number text-lg text-[#222222] font-normal px-2 py-[1px] ${i === currentPage ? \"active\" : \"\"\n          }`;\n        pageButton.addEventListener(\"click\", () => {\n          if (currentPage !== i) {\n            currentPage = i;\n            getProducts();\n          }\n        });\n        paginationContainer?.insertBefore(\n          pageButton,\n          document.getElementById(\"next-page\")\n        );\n      }\n    }\n\n    // Thêm sự kiện click cho nút Previous\n    document.getElementById(\"prev-page\").addEventListener(\"click\", () => {\n      if (currentPage > 1) {\n        currentPage--;\n        getProducts();\n      }\n    });\n\n    // Thêm sự kiện click cho nút Next\n    document.getElementById(\"next-page\").addEventListener(\"click\", () => {\n      if (currentPage < totalPages) {\n        currentPage++;\n        getProducts();\n      }\n    });\n\n    //loading\n    function showLoading(show) {\n      // Hiển thị hoặc ẩn loading indicator\n      loadingIndicator.style.display = show ? \"flex\" : \"none\";\n    }\n\n    function disableUI(disable) {\n      // Vô hiệu hóa hoặc kích hoạt các checkbox và nút bấm\n      document.getElementById(\"list-products-filter\").disabled = disable;\n    }\n\n    textSearch.addEventListener(\"input\", () => {\n      clearTimeout(changeTimer);\n      changeTimer = setTimeout(() => {\n        currentPage = 1;\n        getProducts();\n      }, changeInterval);\n    });\n\n    sortBy.addEventListener(\"change\", () => {\n      currentPage = 1;\n      getProducts();\n    });\n\n  </script>", "doctype": "Page Section", "content": [{"name": "d68ea9608e", "owner": "Administrator", "creation": "2024-10-16 13:44:14.253710", "modified": "2024-10-16 13:44:14.261541", "modified_by": "Administrator", "docstatus": 0, "idx": 1, "field_label": "Tiêu đề", "field_key": "title", "field_type": "Text", "content_type": "Data", "allow_update_to_style": 0, "content": "Sản phẩm", "parent": "PS-24-0000015101", "parentfield": "content", "parenttype": "Page Section", "doctype": "Section Content"}], "section_column_css": [], "column_index": 1}]