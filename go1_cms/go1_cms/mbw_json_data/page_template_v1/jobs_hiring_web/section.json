[{"name": "PS-24-0000013858", "owner": "Administrator", "creation": "2024-10-10 09:13:58.274491", "modified": "2024-10-10 09:14:12.394243", "modified_by": "Administrator", "docstatus": 0, "idx": 2, "section_title": "MBW - Banner điều hướng trang", "route": "mbw - banner -i-u h--ng trang", "class_name": "wzxjzalm", "is_template": 1, "section_group": "Trang tuyển dụng - Hiring Page", "is_full_width": 0, "allow_clone": 1, "is_clone": 0, "section_type": "Static Section", "view_type": "", "device_type": "Web & Mobile", "is_editable": 0, "is_login_required": 0, "content_type": "", "fetch_product": 0, "section_name": "MBW - Banner điều hướng trang", "image_option": "Same Document", "allow_update_to_style": 0, "query_by_category": 0, "no_of_records": 0, "sort_by": "DESC", "dynamic_data": 1, "display_data_randomly": 0, "image": "/files/Screenshot from 2024-06-04 09-21-37be3306.png", "enable_view_more": 0, "custom_section_data": "[]", "bg_type": "Color", "bg_color": "#ffffff", "web_template": "<section class=\"w-full\">\n      <div class=\"header-sidebar bg-cover bg-center h-[300px]  lg:h-[500px]\" style=\"background-image: url('{{ image_banner }}')\">\n        <div class=\"container mx-auto flex h-full items-center\">\n            <h1 class=\"text-4xl xl:text-6xl font-bold my-3 text-white\">{{ name }}</h1>\n        </div>\n    </section>", "doctype": "Page Section", "content": [{"name": "90f3c9659a", "owner": "Administrator", "creation": "2024-10-10 09:13:58.274491", "modified": "2024-10-10 09:14:12.394243", "modified_by": "Administrator", "docstatus": 0, "idx": 1, "field_label": "Tiêu đề trang", "field_key": "name", "field_type": "Text", "content_type": "Data", "allow_update_to_style": 0, "content": "Jobs", "parent": "PS-24-0000013858", "parentfield": "content", "parenttype": "Page Section", "doctype": "Section Content"}, {"name": "a0eec3d80b", "owner": "Administrator", "creation": "2024-10-10 09:13:58.274491", "modified": "2024-10-10 09:14:12.394243", "modified_by": "Administrator", "docstatus": 0, "idx": 2, "field_label": "Ảnh banner", "field_key": "image_banner", "field_type": "Attach", "content_type": "Data", "allow_update_to_style": 0, "content": "/files/banner.jpeg", "parent": "PS-24-0000013858", "parentfield": "content", "parenttype": "Page Section", "doctype": "Section Content"}], "section_column_css": [], "column_index": 1}, {"name": "PS-24-0000015264", "owner": "Administrator", "creation": "2024-10-16 14:45:10.868504", "modified": "2024-10-16 14:45:10.883896", "modified_by": "Administrator", "docstatus": 0, "idx": 3, "section_title": "MBW Tìm kiếm Jobs - Trang tuyển dụng", "route": "mbw t-m ki-m jobs - trang tuy-n d-ng", "class_name": "iriqrrqa", "is_template": 1, "section_group": "Trang tuyển dụng - Hiring Page", "is_full_width": 1, "allow_clone": 1, "is_clone": 0, "section_type": "Custom Section", "view_type": "", "device_type": "Web & Mobile", "is_editable": 0, "is_login_required": 0, "content_type": "", "fetch_product": 0, "section_name": "MBW Tìm kiếm Jobs - Trang tuyển dụng", "image_option": "Same Document", "allow_update_to_style": 0, "reference_document": "Job Opening", "query_by_category": 0, "no_of_records": 8, "sort_by": "DESC", "dynamic_data": 0, "display_data_randomly": 0, "image": "/files/Screenshot from 2024-06-03 15-54-28.png", "enable_view_more": 0, "custom_section_data": "[]", "bg_type": "Color", "bg_color": "#ffffff", "web_template": "<section class=\"w-full discover flex item-center justify-center py-5 my-10\">\n      <div class=\"container flex-col text-center mx-3 xl:mx-0\">\n        <div class=\"flex item-center justify-center flex-col mb-10\">\n          <p class=\"text-3xl xl:text-5xl font-bold py-3 my-2\">{{ title }}</p>\n          <i class=\"text-base font-normal leading-6 italic py-3\">{{ des }}</i>\n          <input type=\"file\" id=\"fileInput\" style=\"display: none\" />\n        </div>\n  \n        <div class=\"grid grid-cols-1 xl:grid-cols-4 xl:gap-4 relative\" id=\"list-jobs-filter\">\n          <div id=\"loading\" class=\"loading-overlay absolute\">\n            <div class=\"spinner\"></div>\n          </div>\n          <div class=\"filter display mb-5\" id=\"filter\">\n            <div\n              class=\"relative flex flex-col border text-left border-l-gray-500 border-none md:border md:border-solid md:border-[#DFE3E8] bg-white rounded-l-lg md:rounded-lg h-full w-[88%] overflow-y-auto\">\n              <form id=\"formFilter\" class=\"p-5\">\n                <div class=\"my-3 flex justify-between items-center\">\n                  <p class=\"font-bold\">Bộ lọc</p>\n                  <button id=\"resetFilter\" class=\"font-semibold text-base text-[#1877F2]\">\n                    Hoàn tác\n                  </button>\n                </div>\n                <div class=\"my-3\">\n                  <p class=\"font-bold mb-2\">Vị trí tuyển dụng</p>\n                  <div class=\"block max-h-[190px] overflow-auto\" id=\"job_designation_container\">\n  \n                  </div>\n                </div>\n                <div class=\"my-3\">\n                  <p class=\"font-bold mb-2\">Hình thức làm việc</p>\n                  <div class=\"block\">\n                    <div class=\"my-3\">\n                      <input id=\"full-time\" type=\"checkbox\" name=\"job-type\" value=\"Full-time\" class=\"mr-2\" />\n                      <label for=\"full-time\">Full time</label>\n                    </div>\n                    <div class=\"my-3\">\n                      <input id=\"part-time\" type=\"checkbox\" value=\"Part-time\" class=\"mr-2\" name=\"job-type\" />\n                      <label for=\"part-time\">Part time</label>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"my-3\">\n                  <p class=\"font-bold mb-2\">Địa chỉ</p>\n                  <div class=\"my-3\">\n                    <input id=\"haNoi\" type=\"checkbox\" name=\"job-locations\" value=\"Hà Nội\" class=\"mr-2\" />\n                    <label for=\"haNoi\">Hà Nội</label>\n                  </div>\n                  <div class=\"my-3\">\n                    <input id=\"HCM\" type=\"checkbox\" name=\"job-locations\" value=\"Hồ Chí Minh\" class=\"mr-2\" />\n                    <label for=\"HCM\">Hồ Chí Minh</label>\n                  </div>\n                  <div class=\"my-3\">\n                    <input id=\"Da-nang\" type=\"checkbox\" name=\"job-locations\" value=\"Đà Nẵng\" class=\"mr-2\" />\n                    <label for=\"Da-nang\">Đà Nẵng</label>\n                  </div>\n                </div>\n                <div class=\"my-3\">\n                  <p class=\"font-bold mb-2\">Mức lương</p>\n                  <div class=\"my-3\">\n                    <div class=\"relative\">\n                      <input type=\"number\" id=\"range_from\" placeholder=\" \"\n                        class=\"block w-full pl-3 pr-14 py-4 bg-white border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-600 focus:border-transparent peer\" />\n                      <label for=\"range_from\"\n                        class=\"absolute left-2 top-1 px-1 text-gray-500 bg-white transition-all duration-200 transform -translate-y-1/2 scale-75 origin-left peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-3 peer-focus:scale-75 peer-focus:-translate-y-1/2\">Từ</label>\n                      <div id=\"delete-range-from\" class=\"absolute right-8 top-1/2 -translate-y-1/2\">\n                        <img src=\"/files/delete-input.svg\" alt=\"\" />\n                      </div>\n                      <div class=\"absolute right-2 top-1/2 -translate-y-1/2\">\n                        <img src=\"/files/vnd.svg\" alt=\"\" />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"my-3\">\n                    <div class=\"relative\">\n                      <input type=\"number\" id=\"range_to\" placeholder=\" \"\n                        class=\"block w-full pl-3 pr-14 py-4 bg-white border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-600 focus:border-transparent peer\" />\n                      <label for=\"range_to\"\n                        class=\"absolute left-2 top-1 px-1 text-gray-500 bg-white transition-all duration-200 transform -translate-y-1/2 scale-75 origin-left peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-3 peer-focus:scale-75 peer-focus:-translate-y-1/2\">Đến</label>\n                      <div id=\"delete-range-to\" class=\"absolute right-8 top-1/2 -translate-y-1/2\">\n                        <img src=\"/files/delete-input.svg\" alt=\"\" />\n                      </div>\n                      <div class=\"absolute right-2 top-1/2 -translate-y-1/2\">\n                        <img src=\"/files/vnd.svg\" alt=\"\" />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </form>\n            </div>\n            <!-- button close filter -->\n            <button id=\"button-close-filter\"\n              class=\"xl:hidden absolute top-1/2 -translate-y-1/2 left-0 z-[999999999] text-white bg-[#212B36] w-[12%] h-12 rounded-l-lg\">\n              x\n            </button>\n          </div>\n          <div class=\"overlay\" id=\"overlay\"></div>\n          <div class=\"list-jobs col-span-3 grid grid-cols-1 gap-7 h-fit\">\n            <div class=\"h-full flex flex-wrap md:justify-between flex-row\">\n              <div class=\"relative w-full mb-4 md:w-2/3 md:mb-0\">\n                <input type=\"text\" placeholder=\"{{ txt_search }}\"\n                  class=\"w-full rounded-md py-4 pl-12 border text-sm outline-[#007bff]\" name=\"job-name\" id=\"job-name\" />\n                <div class=\"absolute top-1/2 left-4 -translate-y-1/2\">\n                  <img src=\"/files/search.svg\" alt=\"\" />\n                </div>\n              </div>\n              <div class=\"w-full md:pl-4 md:w-1/3\">\n                <div\n                  class=\"p-4 w-full text-lg font-medium text-black rounded-[10px] text-center cursor-pointer flex items-center border\">\n                  <div id=\"order-by-button\" class=\"image border-r px-2.5 h-full flex items-center\">\n                    <img id=\"sort-asc\" src=\"/files/asc.svg\" alt=\"\" />\n                    <img id=\"sort-desc\" class=\"hidden\" src=\"/files/Sort-icon-up.svg\" alt=\"\" />\n                  </div>\n                  <div class=\"flex items-center px-2.5\">\n                    <span class=\"font-normal text-sm\"> {{ title_sort }} </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n  \n            <div class=\"grid grid-cols-1 md:grid-cols-2 gap-[38px]\" id=\"job-container\"></div>\n            <div id=\"pagination-container\" class=\"flex justify-center hidden py-4\">\n              <button id=\"prev-page\" class=\"px-2 py-[1px] text-xl\">\n                <svg class=\"h-4\" viewBox=\"0 0 7 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    d=\"M6.83938 2.06621V1.03094C6.83938 0.941211 6.73625 0.891658 6.66661 0.946568L0.629107 5.66219C0.57781 5.70209 0.536302 5.75317 0.50775 5.81154C0.479198 5.86992 0.464355 5.93404 0.464355 5.99902C0.464355 6.06401 0.479198 6.12813 0.50775 6.18651C0.536302 6.24488 0.57781 6.29596 0.629107 6.33585L6.66661 11.0515C6.73759 11.1064 6.83938 11.0568 6.83938 10.9671V9.93184C6.83938 9.86621 6.80857 9.80327 6.75768 9.76309L1.93625 5.99969L6.75768 2.23496C6.80857 2.19478 6.83938 2.13184 6.83938 2.06621Z\"\n                    fill=\"currentColor\" />\n                </svg>\n              </button>\n              <button id=\"next-page\" class=\"px-2 py-[1px] text-xl\"> <svg class=\"h-4\" viewBox=\"0 0 7 12\" fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    d=\"M6.39777 5.66281L0.360269 0.947189C0.344493 0.934768 0.325533 0.92705 0.305568 0.924919C0.285603 0.922788 0.265441 0.926332 0.247399 0.935143C0.229357 0.943955 0.214166 0.957676 0.203571 0.974732C0.192976 0.991787 0.187406 1.01149 0.187501 1.03156V2.06683C0.187501 2.13246 0.218305 2.1954 0.269198 2.23558L5.09063 6.00031L0.269198 9.76505C0.216966 9.80522 0.187501 9.86817 0.187501 9.9338V10.9691C0.187501 11.0588 0.290626 11.1083 0.360269 11.0534L6.39777 6.33781C6.44908 6.29779 6.4906 6.24658 6.51915 6.1881C6.5477 6.12962 6.56254 6.06539 6.56254 6.00031C6.56254 5.93523 6.5477 5.87101 6.51915 5.81253C6.4906 5.75404 6.44908 5.70284 6.39777 5.66281Z\"\n                    fill=\"currentColor\" />\n                </svg></button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <button class=\"filter-toggle\" id=\"filterToggle\">\n        <i class=\"fa fa-filter w-6 h-6\" aria-hidden=\"true\"></i>\n      </button>\n    </section>", "custom_css": "      .listPage {\n        padding: 10px;\n        text-align: center;\n        list-style: none;\n      }\n      .listPage li {\n        background-color: #ffffffbd;\n        display: inline-block;\n        margin: 0 10px;\n        cursor: pointer;\n        color: #222222;\n        width: 24px;\n        height: 24px;\n      }\n      .listPage .active {\n        border: 1px solid #c4161c;\n        color: #c4161c;\n      }\n\n      .blocks {\n        pointer-events: none;\n        color: #ababab !important;\n      }\n\n      .text-container {\n        display: -webkit-box;\n        -webkit-box-orient: vertical;\n        -webkit-line-clamp: 2;\n        overflow: hidden;\n      }\n\n.filter-toggle {\n        display: none;\n        position: fixed;\n        right: 0;\n        top: 50%;\n        transform: translateY(-50%);\n        background: #212B36;\n        color: white;\n        border: none;\n        padding: 10px;\n        border-radius: 5px;\n        cursor: pointer;\n        width: 64px;\n        height: 48px;\n      }\n\n      .overlay {\n        display: none;\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: rgba(0, 0, 0, 0.5);\n        z-index: 999;\n      }\n\n      @media (max-width: 1200px) {\n        .filter {\n          position: fixed;\n          top: 0;\n          right: 0;\n          height: 100%;\n          width: 70%;\n          z-index: 1000;\n          transform: translateX(-100%);\n          transition: transform 0.3s ease;\n          overflow-y: auto;\n          display: flex;\n          justify-content: flex-end;\n          background-color: rgba(0, 0, 0, -0.5);\n        }\n\n        .display {\n          display: none;\n        }\n\n        .filter.active {\n          transform: translateX(0);\n        }\n\n        .filter-toggle {\n          display: block;\n        }\n\n        .overlay.active {\n          display: block;\n        }\n      }\n\n/* Overlay for the entire screen */\n      .loading-overlay {\n        top: 50%;\n        transform: translateY(-50%);\n        width: 100%;\n        height: 100%;\n        background: rgba(255, 255, 255, 0.8);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        z-index: 9999; /* Ensure it is above all other elements */\n        display: none; /* Hidden by default */\n      }\n\n      /* Spinner */\n      .spinner {\n        border: 4px solid rgba(0, 0, 0, 0.1);\n        border-top: 4px solid #3498db;\n        border-radius: 50%;\n        width: 40px;\n        height: 40px;\n        animation: spin 1s linear infinite;\n      }\n\n      /* Spinner animation */\n      @keyframes spin {\n        0% {\n          transform: rotate(0deg);\n        }\n        100% {\n          transform: rotate(360deg);\n        }\n      }\n\n .page-number.active {\n        border: 1px solid #c4161c;\n        color: #c4161c;\n        border-radius: 2px;\n        font-weight: 500;\n      }\n\n      .no-active {\n        color: gray;\n        pointer-events: none;\n      }", "custom_js": "<script>\n    document.addEventListener(\"DOMContentLoaded\", function () {\n      const filterToggle = document.getElementById(\"filterToggle\");\n      const filter = document.getElementById(\"filter\");\n      const closeButton = document.getElementById(\"button-close-filter\");\n      const overlay = document.getElementById(\"overlay\");\n\n      filterToggle.addEventListener(\"click\", function () {\n        filter.classList.add(\"active\");\n        filter.classList.remove(\"display\");\n        overlay.classList.toggle(\"active\");\n      });\n      closeButton.addEventListener(\"click\", () => {\n        filter.classList.add(\"display\");\n        filter.classList.remove(\"active\");\n        overlay.classList.remove(\"active\");\n      });\n\n      overlay.addEventListener(\"click\", function () {\n        filter.classList.remove(\"active\");\n        overlay.classList.remove(\"active\");\n        filter.classList.add(\"display\");\n      });\n\n      let jobs = [];\n      let itemsPerPage = 8;\n      let currentPage = 1;\n      let totalPages = 1;\n\n      const searchParams = new URLSearchParams(window.location.search);\n\n      const filterForm = document.getElementById(\"formFilter\");\n      const loadingIndicator = document.getElementById(\"loading\");\n      const deleteRangeFrom = document.getElementById(\"delete-range-from\");\n      const deleteRangeTo = document.getElementById(\"delete-range-to\");\n      const rangeFrom = document.getElementById(\"range_from\");\n      const rangeTo = document.getElementById(\"range_to\");\n      const resetFilter = document.getElementById(\"resetFilter\");\n      const sortAsc = document.getElementById(\"sort-asc\");\n      const sortDesc = document.getElementById(\"sort-desc\");\n      const job_name = document.getElementById(\"job-name\") || \"\";\n      const jobDesignationContainer = document.getElementById(\n        \"job_designation_container\"\n      );\n\n      let sortType = searchParams.get(\"sort_by\") === \"asc\" ? 1 : 2;\n      let changeTimer; // Timer identifier\n      let changeInterval = 1000; // Thời gian chờ (ms)\n      const name_section = \"{{ name_section }}\";\n\n      const jobTypes = [];\n      const jobLocations = [];\n      const jobDesignation = [];\n\n      if (sortType === 1) {\n        sortAsc.classList.add(\"hidden\");\n        sortDesc.classList.remove(\"hidden\");\n      } else {\n        sortAsc.classList.remove(\"hidden\");\n        sortDesc.classList.add(\"hidden\");\n      }\n\n      document.getElementById(\"job-name\").addEventListener(\"input\", function () {\n        clearTimeout(changeTimer);\n        changeTimer = setTimeout(doneChanging, changeInterval);\n      });\n\n      // Hàm xử lý sau khi giá trị input thay đổi\n      const doneChanging = () => {\n        disableUI(true);\n        showLoading(true);\n        handleSearch();\n      }\n\n      resetFilter.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        const resetDataFilterFormCheckBox = (input, array) => {\n          document.querySelectorAll(input)?.forEach((checkbox) => {\n            checkbox.checked = false;\n          });\n          array.length = 0;\n          return array;\n        };\n\n        resetDataFilterFormCheckBox('input[name=\"job-type\"]', jobTypes);\n        resetDataFilterFormCheckBox('input[name=\"job-locations\"]', jobLocations);\n        resetDataFilterFormCheckBox(\n          'input[name=\"job_designation\"]',\n          jobDesignation\n        );\n        rangeFrom.value = \"\";\n        rangeTo.value = \"\";\n        job_name.value = \"\";\n        sortType = 1;\n\n        rangeSalary = [null, null];\n\n        const data = {\n          text_search: job_name.value || \"\",\n          job_type: jobTypes || [],\n          job_location: jobLocations || [],\n          job_designation: jobDesignation || [],\n          range_salary: rangeSalary,\n          sort_by: sortType === 1 ? \"asc\" : \"desc\",\n        };\n\n        updateUrl(data);\n        setTimeout(() => {\n          handleSearch();\n        }, 0);\n      });\n\n      const updateUrl = (data) => {\n        const params = new URLSearchParams();\n        // Duyệt qua các thuộc tính của object `data` và thêm chúng vào params\n        Object.keys(data).forEach((key) => {\n          if (Array.isArray(data[key])) {\n            // Nếu là mảng, thì thêm từng giá trị của mảng vào params với cùng một key\n            data[key].forEach((value) => params.append(key, value));\n          } else {\n            // Nếu không phải mảng, thêm trực tiếp vào params\n            params.set(key, data[key]);\n          }\n        });\n\n        const newUrl = `${window.location.pathname}?${params.toString()}`;\n        history.replaceState(null, \"\", newUrl);\n      };\n\n      deleteRangeFrom.addEventListener(\"click\", () => {\n        rangeFrom.value = \"\";\n        rangeSalary =\n          rangeFrom.value !== \"\" || rangeTo.value !== \"\"\n            ? [\n              parseInt(document.getElementById(\"range_from\").value) || null,\n              parseInt(document.getElementById(\"range_to\").value) || null,\n            ]\n            : [null, null];\n        const data = {\n          text_search: job_name.value || \"\",\n          job_type: jobTypes || [],\n          job_location: jobLocations || [],\n          job_designation: jobDesignation || [],\n          range_salary: rangeSalary,\n          sort_by: sortType === 1 ? \"asc\" : \"desc\",\n        };\n        updateUrl(data);\n        handleSearch();\n      });\n\n      deleteRangeTo.addEventListener(\"click\", () => {\n        rangeTo.value = \"\";\n        rangeSalary =\n          rangeFrom.value !== \"\" || rangeTo.value !== \"\"\n            ? [\n              parseInt(document.getElementById(\"range_from\").value) || null,\n              parseInt(document.getElementById(\"range_to\").value) || null,\n            ]\n            : [null, null];\n        const data = {\n          text_search: job_name.value || \"\",\n          job_type: jobTypes || [],\n          job_location: jobLocations || [],\n          job_designation: jobDesignation || [],\n          range_salary: rangeSalary,\n          sort_by: sortType === 1 ? \"asc\" : \"desc\",\n        };\n        updateUrl(data);\n      });\n\n      filterForm.addEventListener(\"change\", (e) => {\n        e.preventDefault();\n        doneChanging();\n      });\n\n      document.getElementById(\"order-by-button\").addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        disableUI(true);\n        showLoading(true);\n        if (sortType === 1) {\n          sortType = 2;\n          sortAsc.classList.remove(\"hidden\");\n          sortDesc.classList.add(\"hidden\");\n        } else {\n          sortAsc.classList.add(\"hidden\");\n          sortDesc.classList.remove(\"hidden\");\n          sortType = 1;\n        }\n        handleSearch();\n      });\n\n      // Luu data\n\n      const restoreCheckboxesFromURL = (paramName, inputName) => {\n        const searchParams = new URLSearchParams(window.location.search);\n\n        searchParams.getAll(paramName).forEach((value) => {\n          const checkbox = document.querySelector(\n            `input[name=\"${inputName}\"][value=\"${value}\"]`\n          );\n          if (checkbox) checkbox.checked = true;\n        });\n      }\n      restoreCheckboxesFromURL(\"job_type\", \"job-type\");\n      restoreCheckboxesFromURL(\"job_location\", \"job-locations\");\n      restoreCheckboxesFromURL(\"job_designation\", \"job_designation\");\n\n      rangeFrom.value = searchParams.getAll(\"range_salary\")[0];\n      rangeTo.value = searchParams.getAll(\"range_salary\")[1];\n      job_name.value = searchParams.get(\"text_search\");\n\n      const handleSearch = () => {\n        const getDataFilterFormCheckBox = (input, array, isNumber) => {\n          array.length = 0;\n          document.querySelectorAll(input + \":checked\").forEach((checkbox) => {\n            if (isNumber) {\n              array.push(parseFloat(checkbox.value));\n            } else {\n              array.push(checkbox.value);\n            }\n            return array;\n          });\n        };\n\n        getDataFilterFormCheckBox('input[name=\"job-type\"]', jobTypes);\n        getDataFilterFormCheckBox('input[name=\"job-locations\"]', jobLocations);\n        getDataFilterFormCheckBox('input[name=\"job_designation\"]', jobDesignation);\n        rangeSalary =\n          rangeFrom.value !== \"\" || rangeTo.value !== \"\"\n            ? [\n              parseInt(document.getElementById(\"range_from\").value) || null,\n              parseInt(document.getElementById(\"range_to\").value) || null,\n            ]\n            : [null, null];\n        const data = {\n          text_search: job_name.value || \"\",\n          job_type: jobTypes || [],\n          job_location: jobLocations || [],\n          job_designation: jobDesignation || [],\n          range_salary: rangeSalary,\n          sort_by: sortType === 1 ? \"asc\" : \"desc\",\n        };\n\n        updateUrl(data);\n\n        // Hàm để chuyển đổi đối tượng thành chuỗi query parameters\n        const buildQueryParams = (data) => {\n          const params = [];\n          Object.keys(data).forEach((key) => {\n            const value = data[key];\n            if (value !== null && value !== undefined) {\n              // Chuyển đổi giá trị thành chuỗi JSON nếu là đối tượng hoặc mảng\n              const stringValue =\n                typeof value === \"object\" ? JSON.stringify(value) : value;\n              params.push(`${key}=${stringValue}`);\n            }\n          });\n          return params.join(\"&\");\n        };\n\n        // Tạo chuỗi query parameters\n        const queryParams = buildQueryParams(data);\n        // Gửi dữ liệu đến server\n        fetch(\n          `/api/method/go1_cms.api.website.jobs.get_all_job?name_section=${name_section}&${queryParams}`,\n          {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        )\n          .then((response) => response.json())\n          .then((result) => {\n            if (result.message.data.length) {\n              jobs = result.message.data;\n            } else {\n              jobs = [];\n            }\n            itemsPerPage = result.message.pagination.limit;\n            currentPage = result.message.pagination.current_page;\n            totalPages = result.message.pagination.total_page;\n            displayJobs(currentPage);\n          })\n          .catch((error) => {\n            disableUI(false);\n            showLoading(false);\n          })\n          .finally(() => {\n            // Kích hoạt lại các thành phần UI\n            disableUI(false);\n            showLoading(false);\n          });\n      }\n\n      function disableUI(disable) {\n        // Vô hiệu hóa hoặc kích hoạt các checkbox và nút bấm\n        document.getElementById(\"list-jobs-filter\").disabled = disable;\n      }\n\n      async function fetchData() {\n        try {\n          const response = await fetch(\n            \"/api/method/go1_cms.api.website.jobs.get_filter_job\",\n            {\n              method: \"GET\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n            }\n          );\n          if (!response.ok) {\n            throw new Error(\"Network response was not ok\");\n          }\n          const data = await response.json();\n          displayJobDesignation(data.message.job_designation);\n        } catch (error) {\n        } finally {\n          handleSearch();\n        }\n      }\n\n      const displayJobDesignation = (jobDesignations) => {\n        for (const jobDesignation of jobDesignations) {\n          const job_designation_element = document.createElement(\"div\");\n          job_designation_element.className = \"my-3\";\n          job_designation_element.innerHTML = `\n        <input\n            id=\"${jobDesignation.label}\"\n            type=\"checkbox\"\n            name=\"job_designation\"\n            value=\"${jobDesignation.value}\"\n            class=\"mr-2\"\n        />\n        <label for=\"${jobDesignation.label}\">${jobDesignation.label}</label>\n      `;\n          jobDesignationContainer.appendChild(job_designation_element);\n        }\n\n        restoreCheckboxesFromURL(\"job_designation\", \"job_designation\");\n      };\n\n      const showLoading = (show) => {\n        // Hiển thị hoặc ẩn loading indicator\n        loadingIndicator.style.display = show ? \"flex\" : \"none\";\n      }\n\n      const displayJobs = (page) => {\n        const jobContainer = document.getElementById(\"job-container\");\n        jobContainer.innerHTML = \"\"; // Xóa nội dung cũ\n\n        const startIndex = (page - 1) * itemsPerPage;\n        const endIndex = startIndex + itemsPerPage;\n        const paginatedJobs = jobs.slice(startIndex, endIndex);\n\n        if (paginatedJobs?.length === 0) {\n          const emptyElement = document.createElement(\"div\");\n          emptyElement.className = \"flex flex-col justify-center items-center gap-[38px] py-[80px] col-span-full mt-[38px]\";\n          emptyElement.innerHTML = `\n      <img src=\"/files/empty-state.svg\" alt=\"\" class=\"w-[245.64px] h-[236.85px]\"></img>\n      <span class=\"text-[#212B36] font-bold text-xl\">Không có kết quả tìm kiếm </span>\n      `;\n          jobContainer.appendChild(emptyElement);\n        } else {\n          for (const job of paginatedJobs) {\n            const jobElement = document.createElement(\"div\");\n            // Hiển thị mức lương nếu có\n            let salary = 'Thỏa thuận'\n            if (job.publish_salary_range == 1) {\n              if (job.lower_range && job.upper_range) {\n                salary = `${job.lower_range?.toLocaleString()} - ${job.upper_range?.toLocaleString()} ${job.currency}`\n              } else if (job.lower_range) {\n                salary = `Từ ${job.lower_range?.toLocaleString()} ${job.currency}`\n              } else if (job.upper_range) {\n                salary = `Lên tới ${job.upper_range?.toLocaleString()} ${job.currency}`\n              }\n            }\n\n            jobElement.className =\n              \"item h-fit text-left w-full p-6 bg-white border border-gray-200 rounded-lg shadow cursor-pointer\";\n            jobElement.innerHTML = `\n              <div class=\"w-full\">\n                <div class=\"flex flex-wrap justify-between gap-3\">\n                    <div>\n                      <a href=\"#\">\n                          <h5\n                              class=\"text-lg xl:text-xl font-bold tracking-tight text-black\"\n                          >\n                              ${job.job_title}\n                          </h5>\n                      </a>\n                      <div class=\"flex gap-2 items-center\">\n                          <div\n                              class=\"text-base font-normal text-[#637381]\"\n                          >\n                              <span>${job.pretty_posted_on}</span>\n                          </div>\n                      </div>\n                    </div>\n                    <div class=\"flex items-start\" style=\"${job.designation === null ? \"display: none\" : \"\"}\">\n                        <p\n                            class=\"text-sm leading-[18px] py-1 px-2 font-normal text-center text-black border border-[#919EAB52] rounded-lg text-nowrap\"\n                        >\n                            ${job.designation} \n                        </p>\n                    </div>\n                  </div>\n                  <div class=\"flex flex-col gap-2 mt-3\">\n                      <div\n                        class=\"text-gray-500 flex items-center gap-1\"\n                      >\n                        <img src=\"/files/location.svg\" alt=\"\" />\n                        <span class=\"font-normal text-base text-[#212B36]\"\n                          >${job.location}</span\n                        >\n                      </div>\n                      <div\n                        class=\"text-gray-500 flex items-center gap-1\"\n                      >\n                        <img src=\"/files/time.svg\" alt=\"\" />\n                        <span class=\"font-normal text-base text-[#212B36]\"\n                          >${job.employment_type}</span\n                        >\n                      </div>\n                      <div\n                        class=\"text-gray-500 flex items-center gap-1\"\n                      >\n                        <img src=\"/files/range-salary.svg\" alt=\"\" />\n                        <span class=\"font-normal text-base text-[#212B36]\"\n                          >${salary}</span\n                        >\n                      </div>\n                  </div>\n              </div>\n            `;\n            jobElement.addEventListener(\"click\", () => {\n              // Chuyển hướng đến trang chi tiết công việc với ID của công việc\n              window.location.href = `/${job.route}`;\n            });\n            jobContainer.appendChild(jobElement);\n          }\n        }\n\n        // Hiển thị các nút phân trang\n        displayPagination();\n        window.scrollTo(0, 400);\n      }\n\n      function displayPagination() {\n        const paginationContainer = document.getElementById(\"pagination-container\");\n        const prevPage = document.getElementById(\"prev-page\");\n        const nextPage = document.getElementById(\"next-page\");\n\n        currentPage === 1\n          ? prevPage?.classList.add(\"no-active\")\n          : prevPage.classList.remove(\"no-active\");\n        currentPage === totalPages\n          ? nextPage?.classList.add(\"no-active\")\n          : nextPage.classList.remove(\"no-active\");\n\n        totalPages > 1\n          ? paginationContainer.classList.remove(\"hidden\")\n          : paginationContainer.classList.add(\"hidden\");\n\n        paginationContainer\n          ?.querySelectorAll(\".page-number, .pagination-ellipsis\")\n          ?.forEach((button) => button.remove());\n\n        let startPage = Math.max(1, currentPage - 1);\n        let endPage = Math.min(totalPages, currentPage + 1);\n\n        // Điều chỉnh để luôn hiển thị tối đa 5 trang\n        if (endPage - startPage < 4) {\n          if (startPage === 1) {\n            endPage = Math.min(totalPages, startPage + 4);\n          } else if (endPage === totalPages) {\n            startPage = Math.max(1, endPage - 4);\n          }\n        }\n\n        // Thêm nút \"1\" và \"...\" nếu cần\n        if (startPage > 1) {\n          createPageButton(1, paginationContainer); // Nút đầu tiên\n\n          if (startPage > 2) {\n            createEllipsis(paginationContainer); // Thêm dấu \"...\"\n          }\n        }\n\n        // Tạo các nút trang\n        for (let i = startPage; i <= endPage; i++) {\n          createPageButton(i, paginationContainer, i === currentPage);\n        }\n\n        // Thêm nút \"...\" và nút cuối cùng nếu cần\n        if (endPage < totalPages) {\n          if (endPage < totalPages - 1) {\n            createEllipsis(paginationContainer); // Thêm dấu \"...\"\n          }\n          createPageButton(totalPages, paginationContainer); // Nút cuối cùng\n        }\n      }\n\n      // Hàm tạo nút trang\n      function createPageButton(page, container, isActive = false) {\n        const pageButton = document.createElement(\"button\");\n        pageButton.innerText = page;\n        pageButton.className = `page-number text-sm text-[#222222] font-normal px-2 py-[1px] ${isActive ? \"active\" : \"\"\n          }`;\n        pageButton.addEventListener(\"click\", () => {\n          currentPage = page;\n          getBlogList();\n          updateURL(); // Cập nhật URL\n        });\n        container.insertBefore(pageButton, document.getElementById(\"next-page\"));\n      }\n\n      // Hàm tạo dấu \"...\"\n      function createEllipsis(container) {\n        const ellipsis = document.createElement(\"span\");\n        ellipsis.innerText = \"...\";\n        ellipsis.className = \"pagination-ellipsis px-2 py-[1px]\";\n        container.insertBefore(ellipsis, document.getElementById(\"next-page\"));\n      }\n\n      // Thêm sự kiện click cho nút Previous\n      document.getElementById(\"prev-page\").addEventListener(\"click\", () => {\n        if (currentPage > 1) {\n          currentPage--;\n          displayJobs(currentPage);\n        }\n      });\n\n      // Thêm sự kiện click cho nút Next\n      document.getElementById(\"next-page\").addEventListener(\"click\", () => {\n        if (currentPage < totalPages) {\n          currentPage++;\n          displayJobs(currentPage);\n        }\n      });\n\n      // Gọi hàm hiển thị lần đầu tiên\n      fetchData();\n      displayJobs(currentPage);\n    });\n\n  </script>", "doctype": "Page Section", "content": [{"name": "8e3c61ac7e", "owner": "Administrator", "creation": "2024-10-16 14:45:10.868504", "modified": "2024-10-16 14:45:10.883896", "modified_by": "Administrator", "docstatus": 0, "idx": 1, "field_label": "Tiêu đề", "field_key": "title", "field_type": "Text", "content_type": "Data", "allow_update_to_style": 0, "content": "Discover jobs for you", "parent": "PS-24-0000015264", "parentfield": "content", "parenttype": "Page Section", "doctype": "Section Content"}, {"name": "6effeaa9ed", "owner": "Administrator", "creation": "2024-10-16 14:45:10.868504", "modified": "2024-10-16 14:45:10.883896", "modified_by": "Administrator", "docstatus": 0, "idx": 2, "field_label": "Mô tả", "field_key": "des", "field_type": "Small Text", "content_type": "Data", "allow_update_to_style": 0, "content": "Browse 200+ Top Jobs In Your Local City.", "parent": "PS-24-0000015264", "parentfield": "content", "parenttype": "Page Section", "doctype": "Section Content"}, {"name": "542893914f", "owner": "Administrator", "creation": "2024-10-16 14:45:10.868504", "modified": "2024-10-16 14:45:10.883896", "modified_by": "Administrator", "docstatus": 0, "idx": 3, "field_label": "Tiêu đề sắp xếp", "field_key": "title_sort", "field_type": "Text", "content_type": "Data", "allow_update_to_style": 0, "content": "Last update on", "parent": "PS-24-0000015264", "parentfield": "content", "parenttype": "Page Section", "doctype": "Section Content"}, {"name": "1ecef8a1b7", "owner": "Administrator", "creation": "2024-10-16 14:45:10.868504", "modified": "2024-10-16 14:45:10.883896", "modified_by": "Administrator", "docstatus": 0, "idx": 4, "field_label": "Gợi ý thanh tìm kiếm", "field_key": "txt_search", "field_type": "Text", "content_type": "Data", "allow_update_to_style": 0, "content": "Tìm kiếm", "parent": "PS-24-0000015264", "parentfield": "content", "parenttype": "Page Section", "doctype": "Section Content"}], "section_column_css": [], "column_index": 1}]